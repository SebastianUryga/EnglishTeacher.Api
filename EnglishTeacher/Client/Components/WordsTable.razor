@using EnglishTeacher.Client.Models
@using System.Net
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@implements IAsyncDisposable
<h3>WordsTable</h3>

<table class ="table table-striped">
    <thred>
        <tr>
            <th>Polish Translate</th>
        </tr>
    </thred>
    <tbody>
        @foreach(var word in Words)
        {
            <tr>
                <td>@word.PolishText</td>
                <button @onclick= "() => Delete(word)">Delete</button>
                <button @onclick= "() => DisplayTranslate(word.EnglishText)">Translate</button>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public List<WordDto> Words { get; set; }

    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/word.js").AsTask();

    async Task DisplayTranslate(string text)
    {
        var module = await Module;
        await module.InvokeVoidAsync("displayTranslate", text);
    }

    async Task Delete(WordDto word)
    {
        var response = await Http.DeleteAsync($"api/words?id={word.Id}");
        var status = response.StatusCode;
        if (status.Equals(HttpStatusCode.OK))
            Words.Remove(word);
        else
        {
            var module = await Module;
            await module.InvokeVoidAsync("deletionFailed");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if(_module != null)
        {
            var module = await _module;
            await module.DisposeAsync();
        }
    }
}
